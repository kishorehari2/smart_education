{"version":3,"sources":["components/array/validate.js","components/array/FieldArraysForm.js","components/array/showResults.js","components/array/store.js","components/array/indexer.js","components/FinalQuizItem.js","components/Assessment.js","components/MakeColumns.js","components/ExcelReader.js","components/FinalQuizAdd.js","components/FinalQuizDetails.js","components/answer/Answer.js","components/question/Question.js","components/QuizDetails.js","components/Teacher.js","components/voice/validate.js","components/voice/FieldArraysForm.js","components/voice/showResults.js","components/voice/store.js","components/voice/indexer.js","components/voice/views/keywords.jsx","components/voice/views/demo.jsx","components/voice/VoiceAssessmentItem.js","components/voice/VoiceAssessment.js","components/voice/VoiceQuizDetails.js","components/Main.js","components/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["validate","values","errors","name","questions","length","questionsArrayErrors","forEach","question","questionIndex","questionErrors","undefined","correct_answer","isNaN","answers","optionArrayErrors","answer","answerIndex","_error","renderCount","input","label","type","meta","touched","error","value","Math","floor","random","renderField","placeholder","renderAnswers","fields","onClick","push","map","index","key","title","remove","Field","component","className","renderQuestions","submitFailed","FieldArray","reduxForm","form","props","handleSubmit","pristine","reset","submitting","axios","get","then","response","data","count","onSubmit","disabled","a","request","method","url","lang","id","localStorage","setItem","alert","window","opener","open","close","catch","err","console","log","reducer","combineReducers","reduxFormReducer","store","devToolsExtension","createStore","Indexer","style","padding","showResults","Component","FinalQuizItem","state","item","this","to","sleep","ms","Promise","resolve","setTimeout","Assessment","quiz","mcq","showLoader","errorMsg","getAssessments","setState","meetupItems","meetup","i","mcqID","display","takeSnapShot","make_cols","refstr","o","C","XLSX","utils","decode_range","e","c","encode_col","SheetJSFT","x","join","ExcelReader","file","cols","newData","finalData","voicedata","finalVoiceData","newVoiceData","handleFile","bind","handleChange","handleInputChange","removeItem","files","target","reader","FileReader","rABS","readAsBinaryString","onload","bstr","result","wb","read","bookVBA","ws","Sheets","sheet_to_json","len","Option1","Option2","Option3","Option4","addMCQQuiz","wsvoice","keywords","addVoiceQuiz","addFinalQuiz","readAsArrayBuffer","document","getElementById","innerHTML","finalQuiz","getItem","location","replace","voiceID","color","download","Label","htmlFor","ref","onChange","accept","href","FinalQuizAdd","proceed","onClick1","btn","setAttribute","btn1","required","pathname","FinalQuizDetails","seconds","startQuiz","minutes","picInterval","setTime","Webcam","set","width","height","image_format","jpeg_quality","attach","myInterval","setInterval","clearInterval","quizId","match","params","querySelector","click","snap","data_uri","substring","file_name","_attachments","l","indexOf","confidence","float","Answer","Object","keys","qAnswer","checkAnswer","clickedAnswer","Question","QuizDetails","quiestions","totalTime","correctAnswers","correctAnswer","step","score","details","database","nextStep","getQuiz","setQuestion","align","test","Teacher","class","VoiceIndexer","URL","lastIndexOf","initialValues","allResultsReducer","list","message","concat","results","keywordReducer","keywords_result","k","getSpotted","messages","reduce","Mp3Recorder","MicRecorder","bitRate","Demo","start","transcriptStatus","isBlocked","isRecording","onTranscribe","stop","getMp3","buffer","blob","blobURL","createObjectURL","File","lastModified","Date","now","handleUserAnswer","model","rawMessages","formattedMessages","audioSource","speakerLabels","getKeywords","settingsAtStreamStart","questionkey","setKeywords","handleSampleClick","handleSample1Click","handleSample2Click","captureSettings","stopTranscription","getRecognizeOptions","isNarrowBand","handleMicClick","handleUploadClick","handleUserFile","handleUserFileRejection","playFile","handleStream","handleRawMessage","handleFormattedMessage","handleTranscriptEnd","handleModelChange","supportsSpeakerLabels","handleSpeakerLabelsChange","handleKeywordsChange","getKeywordsArr","getKeywordsArrUnique","getFinalResults","getCurrentInterimResult","getFinalAndLatestInterimResult","handleError","blobToFile","theBlob","fileName","stream","extra","assign","access_token","accessToken","token","smart_formatting","format","objectMode","interim_results","word_alternatives_threshold","keywords_threshold","timestamps","speaker_labels","resultsBySpeaker","speakerlessInterim","serviceUrl","recognizeMicrophone","dropzone","spotted","total","updateSession","which","filename","samples","recognizeFile","play","realtime","removeAllListeners","recognizeStream","on","frame","json","sent","once","binary","code","msg","fetchToken","navigator","getUserMedia","audio","datal","tokenInterval","fetch","res","status","Error","creds","cachedModels","some","m","supported_features","prevState","split","trim","filter","self","r","final","interim","isSupported","onDropAccepted","onDropRejected","maxSize","disableClick","activeClassName","rejectClassName","node","onLoad","sum","Number","sessionStorage","getKeywordsSummary","VoiceAssessmentItem","VoiceAssessment","meetups","getVoiceQuiz","VoiceQuizDetails","progress","check","handleTranscription","langValue","round","Main","exact","path","Navbar","data-target","App","Boolean","hostname","require","config","silent","ReactDOM","render","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f8c94cc9.chunk.js","sourcesContent":["const validate = values => {\r\n  const errors = {}\r\n  if (!values.name) {\r\n    errors.name = 'Required'\r\n  }\r\n  if (!values.questions || !values.questions.length) {\r\n    errors.questions = { _error: 'At least one question must be entered' }\r\n  } else {\r\n    const questionsArrayErrors = []\r\n    values.questions.forEach((question, questionIndex) => {\r\n      const questionErrors = {}\r\n      if (!question || !question.question || question.question === undefined) {\r\n        questionErrors.question = 'Required'\r\n        questionsArrayErrors[questionIndex] = questionErrors\r\n      }\r\n      if (!question || !question.correct_answer) {\r\n        questionErrors.correct_answer = 'Required'\r\n        questionsArrayErrors[questionIndex] = questionErrors\r\n      } else if (isNaN(question.correct_answer)) {\r\n        questionErrors.correct_answer = 'Correct option should be number'\r\n        questionsArrayErrors[questionIndex] = questionErrors\r\n      }\r\n      if (!question.answers || !question.answers.length) {\r\n        errors.questions = { _error: 'At least one option must be entered' }\r\n      }\r\n      else if (question && question.answers && question.answers.length) {\r\n        const optionArrayErrors = []\r\n        question.answers.forEach((answer, answerIndex) => {\r\n          if (!answer || !answer.length) {\r\n            optionArrayErrors[answerIndex] = 'Required'\r\n          }\r\n        })\r\n        if (optionArrayErrors.length) {\r\n          questionErrors.answers = optionArrayErrors\r\n          questionsArrayErrors[questionIndex] = questionErrors\r\n        }\r\n\r\n      }\r\n\r\n    })\r\n    if (questionsArrayErrors.length) {\r\n      errors.questions = questionsArrayErrors\r\n    }\r\n  }\r\n  return errors\r\n}\r\n\r\nexport default validate\r\n","import axios from 'axios';\nimport React from 'react';\nimport { Field, FieldArray, reduxForm } from 'redux-form';\nimport validate from './validate';\n\n\n\n\nconst getCount = (id) => (\n  axios.get(`/api/quizzes/count`).then(response => {\n    id = response.data.count;\n    return id;\n  })\n);\nconst renderCount = ({ input, label, type, meta: { touched, error } }) => (\n  <div>\n    <label>{label}</label>\n    <div>\n      <input type=\"hidden\" value={Math.floor(Math.random() * 100) + 1} />\n      {touched && error && <span>{error}</span>}\n    </div>\n  </div>\n);\n\n\nconst renderField = ({ input, label, type, meta: { touched, error } }) => (\n  <div>\n    <label>{label}</label>\n    <div>\n      <input {...input} type={type} placeholder={label} />\n      {touched && error && <span>{error}</span>}\n    </div>\n  </div>\n);\n\n\nconst renderAnswers = ({ fields, meta: { error } }) => (\n  <ul>\n    <li>\n      <button type=\"button\" onClick={() => fields.push()}>Add Option</button>\n    </li>\n    {fields.map((answers, index) => (\n      <li key={index}>\n        <button\n          type=\"button\"\n          title=\"Remove Option\"\n          onClick={() => fields.remove(index)}\n        />\n        <Field\n          name={answers}\n          type=\"text\"\n          component={renderField}\n          label={`Option #${index + 1}`}\n        />\n      </li>\n    ))}\n    {error && <li className=\"error\">{error}</li>}\n  </ul>\n);\n\nconst renderQuestions = ({ fields, meta: { touched, error, submitFailed } }) => (\n\n  <ul>\n    <li>\n      <button type=\"button\" onClick={() => fields.push({})}>Add Question</button>\n      {(touched || submitFailed) && error && <span>{error}</span>}\n    </li>\n    {fields.map((question, index) => (\n      <li key={index}>\n        <button\n          type=\"button\"\n          title=\"Remove Question\"\n          onClick={() => fields.remove(index)}\n        />\n        <h4>Question #{index + 1}</h4>\n        <Field\n          name={`${question}.question`}\n          type=\"text\"\n          component={renderField}\n          label=\"Question\"\n        />\n        <Field\n          name={`${question}.correct_answer`}\n          type=\"text\"\n          component={renderField}\n          label=\"Correct Answer Option\"\n        />\n        <Field type=\"hidden\" name={`${question}.id`} component={renderCount} />\n        <FieldArray name={`${question}.answers`} component={renderAnswers} />\n      </li>\n    ))}\n\n  </ul>\n\n);\n\nconst FieldArraysForm = props => {\n  const { handleSubmit, pristine, reset, submitting } = props;\n  //this.props.change(id, getCount)\n  getCount();\n  return (\n    <form onSubmit={handleSubmit}>\n\n      <Field\n        name=\"name\"\n        type=\"text\"\n        component={renderField}\n        label=\"Quiz Name\"\n      />\n      <FieldArray name=\"questions\" component={renderQuestions} />\n      <div>\n        <button type=\"submit\" disabled={submitting}>Submit</button>\n        <button type=\"button\" disabled={pristine || submitting} onClick={reset}>\n          Clear Values\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default reduxForm({\n  form: 'fieldArrays', // a unique identifier for this form\n  validate,\n})(FieldArraysForm);\n","import axios from 'axios';\nexport default (async function showResults(values) {\n  axios.request({\n    method: 'post',\n    url: '/api/quizzes/',\n    data: values\n  }).then(response => {\n    var lang = response.data.id;\n    localStorage.setItem('mcqId', lang);\n    alert('MCQ Quiz added successfully!!')\n    window.opener = null;\n    window.open(\"\", \"_self\");\n    window.close();\n  }).catch(err => console.log(err));\n\n\n});\n\n","import { createStore, combineReducers } from 'redux';\nimport { reducer as reduxFormReducer } from 'redux-form';\n\nconst reducer = combineReducers({\n  form: reduxFormReducer, // mounted under \"form\"\n});\nconst store = (window.devToolsExtension\n  ? window.devToolsExtension()(createStore)\n  : createStore)(reducer);\n\nexport default store;\n","import React, { Component } from \"react\";\nimport { Provider } from \"react-redux\";\nimport { Values } from \"redux-form-website-template\";\nimport FieldArraysForm from \"./FieldArraysForm\";\nimport showResults from \"./showResults\";\nimport store from \"./store\";\n\nclass Indexer extends Component {\n\n  render() {\n\n    return (\n      <Provider store={store}>\n        <div style={{ padding: 15 }}>\n          <h2>Add Assessment</h2>\n          <FieldArraysForm onSubmit={showResults} />\n\n      \n        </div>\n      </Provider>\n    )\n  }\n};\nexport default Indexer;\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass FinalQuizItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            item: props.item\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <tr><td className=\"collection-item\"> {this.state.item.name}</td>\r\n                <td><Link to={`/quiz/getQuiz/${this.state.item.id}`}>\r\n                    Attempt </Link></td>\r\n            </tr>);\r\n    }\r\n\r\n}\r\n\r\nexport default FinalQuizItem;\r\n","import axios from 'axios';\r\nimport React, { Component } from 'react';\r\nimport FinalQuizItem from './FinalQuizItem';\r\nconst sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\r\nclass Assessment extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            quiz: [],\r\n            mcq: [],\r\n            showLoader: true,\r\n            errorMsg: ''\r\n        }\r\n    }\r\n    componentWillMount() {\r\n        this.getAssessments();\r\n        //  this.test();\r\n    }\r\n\r\n    async getAssessments() {\r\n        await sleep(700);\r\n\r\n        axios.get('/api/final/').then(response => {\r\n            this.setState({ quiz: response.data }, () => {\r\n\r\n            });\r\n        }).catch(function (error) {\r\n            error = \"Error in Connection, please refresh\";\r\n        })\r\n        let id = this.state.quiz;\r\n        this.setState({\r\n            showLoader: false,\r\n\r\n        })\r\n\r\n    }\r\n    render() {\r\n        const meetupItems = this.state.quiz.map((meetup, i) => {\r\n           \r\n            return (<FinalQuizItem key={meetup.mcqID}\r\n                item={meetup} />)\r\n        })\r\n\r\n\r\n        return (\r\n            <div >\r\n                <h1>Pending Assessments</h1>\r\n                <div id=\"camera\" style={{ display: \"none\" }}  ></div>\r\n                <input type=\"button\" id=\"btPic\" value=\"click\" style={{ display: \"none\" }} onClick={this.takeSnapShot} />\r\n\r\n                {this.state.showLoader && <div id=\"loader\" className=\"container1\"></div>}\r\n                {!this.state.showLoader && < div className=\"Content\" >\r\n                    <br></br>\r\n                    {meetupItems.length === 0 ? <h4 className=\"green-text\">{this.state.errorMsg}</h4> :\r\n\r\n                        <table id=\"quiz\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Assessment</th>\r\n                                    <th>Action</th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {meetupItems}\r\n                            </tbody>\r\n                        </table>\r\n                    }\r\n                </div>}\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Assessment;\r\n","import XLSX from 'xlsx';\r\n/* generate an array of column objects */\r\nexport const make_cols = refstr => {\r\n\tlet o = [], C = XLSX.utils.decode_range(refstr).e.c + 1;\r\n\tfor(var i = 0; i < C; ++i) o[i] = {name:XLSX.utils.encode_col(i), key:i}\r\n\treturn o;\r\n};","import axios from 'axios';\r\nimport { Label } from 'office-ui-fabric-react';\r\nimport React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport XLSX from 'xlsx';\r\nimport { make_cols } from './MakeColumns';\r\n\r\nconst sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\r\n\r\nconst SheetJSFT = [\r\n  \"xlsx\", \"xlsb\", \"xlsm\", \"xls\", \"xml\", \"csv\", \"txt\", \"ods\", \"fods\", \"uos\", \"sylk\", \"dif\", \"dbf\", \"prn\", \"qpw\", \"123\", \"wb*\", \"wq*\", \"html\", \"htm\"\r\n].map(function (x) { return \".\" + x; }).join(\",\");\r\n\r\nclass ExcelReader extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      file: {},\r\n      data: [],\r\n      cols: [],\r\n      newData: [],\r\n      name: '',\r\n      finalData: [],\r\n      voicedata: [],\r\n      finalVoiceData: [],\r\n      newVoiceData: []\r\n    }\r\n    this.handleFile = this.handleFile.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n  }\r\n  componentDidMount(){\r\n    localStorage.removeItem('mcqId');\r\n    localStorage.removeItem('voiceId')\r\n  }\r\n\r\n  addMCQQuiz(values) {\r\n    axios.request({\r\n      method: 'post',\r\n      url: '/api/quizzes/',\r\n      data: values\r\n    }).then(response => {\r\n      var lang = response.data.id;\r\n      localStorage.setItem('mcqId', lang);\r\n    }).catch(err => console.log(err));\r\n  }\r\n\r\n  handleChange(e) {\r\n    const files = e.target.files;\r\n    if (files && files[0]) this.setState({ file: files[0] });\r\n  };\r\n\r\n  handleFile() {\r\n    if (this.state.file.name === undefined) {\r\n      document.getElementById(\"error\").innerHTML = \"Please upload file\"\r\n      return;\r\n    }\r\n    if (this.state.name.length === 0) {\r\n\r\n      document.getElementById(\"error\").innerHTML = \"Name is mandatory\"\r\n      return;\r\n    }\r\n    /* Boilerplate to set up FileReader */\r\n    const reader = new FileReader();\r\n    const rABS = !!reader.readAsBinaryString;\r\n\r\n    reader.onload = (e) => {\r\n      /* Parse data */\r\n      const bstr = e.target.result;\r\n      const wb = XLSX.read(bstr, { type: rABS ? 'binary' : 'array', bookVBA: true });\r\n      const ws = wb.Sheets[\"mcq\"];\r\n      if (ws != null) {\r\n        /* Convert array of arrays */\r\n        const data = XLSX.utils.sheet_to_json(ws);\r\n        /* Update state */\r\n        this.setState({ data: data, cols: make_cols(ws['!ref']) }, () => {\r\n          var temp = this.state.data;\r\n          const len = temp.length;\r\n          for (var i = 0; i < len; i++) {\r\n\r\n            this.state.data[i].answers = [this.state.data[i].Option1, this.state.data[i].Option2, this.state.data[i].Option3, this.state.data[i].Option4];\r\n            this.state.newData[i] = {\r\n              \"question\": this.state.data[i].question,\r\n              \"answers\": this.state.data[i].answers,\r\n              \"correct_answer\": this.state.data[i].correct_answer\r\n            }\r\n\r\n          }\r\n          this.state.finalData = {\r\n            \"name\": this.state.name,\r\n            \"questions\": this.state.newData\r\n          }\r\n          this.addMCQQuiz(this.state.finalData);\r\n        });\r\n      }\r\n      const wsvoice = wb.Sheets[\"voice\"];\r\n      if (wsvoice != null) {\r\n        /* Convert array of arrays */\r\n        const voicedata = XLSX.utils.sheet_to_json(wsvoice);\r\n        /* Update state */\r\n        this.setState({ voicedata: voicedata, cols: make_cols(wsvoice['!ref']) }, () => {\r\n          var temp = this.state.voicedata;\r\n          const len = temp.length;\r\n          alert(this.state.cols)\r\n          for (var i = 0; i < len; i++) {\r\n            //this.state.data[i].answers=[this.state.data[i].Option1,this.state.data[i].Option2,this.state.data[i].Option3,this.state.data[i].Option4];\r\n            this.state.newVoiceData[i] = {\r\n              \"question\": this.state.voicedata[i].question,\r\n\r\n              \"keywords\": this.state.voicedata[i].keywords\r\n            }\r\n          }\r\n          this.state.finalVoiceData = {\r\n            \"name\": this.state.name,\r\n            \"questions\": this.state.newVoiceData\r\n          }\r\n          this.addVoiceQuiz(this.state.finalVoiceData)\r\n\r\n        });\r\n      }\r\n      this.addFinalQuiz();\r\n\r\n    };\r\n\r\n    if (rABS) {\r\n      reader.readAsBinaryString(this.state.file);\r\n    } else {\r\n      reader.readAsArrayBuffer(this.state.file);\r\n    };\r\n  }\r\n  handleInputChange(e) {\r\n\r\n    const target = e.target;\r\n    const value = target.value;\r\n    this.setState({\r\n      name: value\r\n    })\r\n  }\r\n  async addFinalQuiz() {\r\n    await sleep(700)\r\n    var finalQuiz = {\r\n      \"name\": this.state.name, \"mcqID\": localStorage.getItem('mcqId'),\r\n      \"voiceID\": localStorage.getItem('voiceId')\r\n    }\r\n    if (localStorage.getItem('voiceId') == null) {\r\n      delete finalQuiz['voiceID'];\r\n    }\r\n    if (localStorage.getItem('mcqId') == null) {\r\n      delete finalQuiz['mcqID'];\r\n    }\r\n    axios.request({\r\n      method: 'post',\r\n      url: '/api/final/',\r\n      data: finalQuiz\r\n    }).then(response => {\r\n      localStorage.removeItem('mcqId')\r\n      localStorage.removeItem('voiceId')\r\n      window.location.replace(\"/teacher\");\r\n    }).catch(err => console.log(err));\r\n  }\r\n\r\n  addVoiceQuiz(values) {\r\n    axios.request({\r\n      method: 'post',\r\n      url: '/api/voice/',\r\n      data: values\r\n    }).then(response => {\r\n      var voiceID = response.data.id\r\n      localStorage.setItem('voiceId', voiceID);\r\n\r\n    }).catch(err => console.log(err));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1 color=\"blue\">MCQ Template Upload</h1>\r\n        <hr />\r\n        <p>\r\n          You can upload your template of quiz following below steps.\r\n        </p>\r\n\r\n        <b color=\"blue\"><u>Instructions</u></b>\r\n        <ul>\r\n          <li>\r\n            <Link to=\"/files/test.xlsx\" target=\"_blank\" download=\"Template.xlsx\">Download </Link>\r\n                   the template attached here.</li>\r\n          <li>Fill in your question , options and correct answer</li>\r\n          <li>Do not modify the order of columns</li>\r\n          <li>If you need to remove number of options, delete the corresponding columns from the template before uploading</li>\r\n          <li>Do not rename the worksheet names while uploading</li>\r\n        </ul>\r\n\r\n        <Label htmlFor=\"name\">Quiz Name</Label>\r\n        <input type=\"text\" id=\"name\" ref=\"name\" onChange={this.handleInputChange}></input>\r\n        <span id=\"error\" className=\"red-text\"></span>\r\n        <br></br>\r\n\r\n        <input type=\"file\" className=\"form-control\" id=\"file\" accept={SheetJSFT} onChange={this.handleChange} />\r\n\r\n        <br />\r\n        <br></br>\r\n        <input type='submit'\r\n          className=\"btn\"\r\n          value=\"Upload Quiz\"\r\n          onClick={this.handleFile} />\r\n        <div className=\"fixed-action-btn\">\r\n          <a className=\"btn-floating btn-large red\">\r\n            <i className=\"large material-icons\">navigation</i>\r\n          </a>\r\n          <ul>\r\n            <li><a href=\"/quiz/addAssessment\" title=\"Form\" className=\"btn-floating green\"><i className=\"material-icons\">reorder</i></a></li>\r\n            <li><a href=\"/teacher\" title=\"Home\" className=\"btn-floating red\"><i className=\"material-icons\">home</i></a></li>\r\n\r\n          </ul>\r\n        </div>\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default ExcelReader;\r\n","import axios from 'axios';\r\nimport React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nclass FinalQuizAdd extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            item: props.item,\r\n            mcqID: '',\r\n            voiceID: '',\r\n            name: '',\r\n            proceed: true\r\n\r\n        }\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.addFinalQuiz = this.addFinalQuiz.bind(this);\r\n        this.onClick = this.onClick.bind(this);\r\n        this.onClick1 = this.onClick1.bind(this);\r\n\r\n    }\r\n    handleInputChange(e) {\r\n\r\n        const target = e.target;\r\n        const value = target.value;\r\n        //const name=target.name;\r\n\r\n        this.setState({\r\n            name: value\r\n        })\r\n    }\r\n    onClick() {\r\n        this.btn.setAttribute(\"disabled\", \"disabled\");\r\n        this.setState({\r\n            proceed: false\r\n        })\r\n    }\r\n    onClick1() {\r\n        this.btn1.setAttribute(\"disabled\", \"disabled\");\r\n        this.setState({\r\n            proceed: false\r\n        })\r\n    }\r\n    addFinalQuiz() {\r\n        if (this.state.name.length === 0) {\r\n\r\n            document.getElementById(\"error\").innerHTML = \"Name is mandatory\"\r\n            return;\r\n        }\r\n        var finalQuiz = {\r\n            \"name\": this.state.name,\r\n            \"mcqID\": localStorage.getItem('mcqId'),\r\n            \"voiceID\": localStorage.getItem('voiceId')\r\n        }\r\n        if (localStorage.getItem('voiceId') == null) {\r\n            delete finalQuiz['voiceID'];\r\n        }\r\n        if (localStorage.getItem('mcqId') == null) {\r\n            delete finalQuiz['mcqID'];\r\n        }\r\n\r\n        axios.request({\r\n            method: 'post',\r\n            url: '/api/final/',\r\n            data: finalQuiz\r\n        }).then(response => {\r\n            localStorage.removeItem('mcqId')\r\n            localStorage.removeItem('voiceId')\r\n            window.location.replace(\"/teacher\");\r\n        }).catch(err => console.log(err));\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <h1>Add new Assessment - Instructions</h1>\r\n                <ul>\r\n                    <li><b>You can add both MCQ and voice sections to your Assessment</b></li>\r\n                    <li><b>Click on the respective link to add the particular section </b></li>\r\n                    <li><b>Clicking on each link will open a new window. Add the questions in the window and click submit to add the particular section quiz</b></li>\r\n                    <li><b>After adding a section, click on the other link if you want to add both sections in your quiz</b></li>\r\n                   <li><b>After adding the section, click on Proceed to add the final quiz.</b></li>\r\n                     </ul>\r\n                <label htmlFor=\"name\">Quiz Name</label>\r\n                <input type=\"text\" required id=\"name\" ref=\"name\" onChange={this.handleInputChange}></input>\r\n                <span id=\"error\" className=\"red-text\"></span>\r\n                <br></br>\r\n                <Link ref={btn => { this.btn = btn; }} onClick={this.onClick} className=\"btn\" to={{\r\n                    pathname: '/mcq/addAssessment',\r\n                    state: {\r\n                        name: this.state.name\r\n                    }\r\n                }} target=\"_blank\" disabled={this.state.mcqID === undefined ? true : false} >\r\n                    MCQ   </Link>\r\n\r\n                <br></br>\r\n                <br></br>\r\n                <Link className=\"btn\" ref={btn1 => { this.btn1 = btn1; }} onClick={this.onClick1} to='/voice/addAssessment' disabled={this.state.voiceID === undefined ? true : false} target=\"_blank\"  >\r\n                    VOICE   </Link>\r\n                <br></br>\r\n\r\n                <button className=\"btn\" onClick={this.addFinalQuiz} disabled={this.state.proceed} >Proceed</button>\r\n\r\n\r\n\r\n\r\n\r\n                <div className=\"fixed-action-btn\">\r\n                    <a className=\"btn-floating btn-large red\">\r\n                        <i className=\"large material-icons\">navigation</i>\r\n                    </a>\r\n                    <ul>\r\n                        <li><a href=\"/quiz/addAssessmentTemplate\" title=\"Templates\" className=\"btn-floating green\"><i className=\"material-icons\">publish</i></a></li>\r\n                        <li><a href=\"/teacher\" className=\"btn-floating red\" title=\"Home\"><i className=\"material-icons\">home</i></a></li>\r\n\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default FinalQuizAdd;\r\n","import axios from 'axios';\r\nimport React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Webcam from 'webcamjs';\r\nconst sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\r\n\r\nclass FinalQuizDetails extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            item: props.item,\r\n            mcqID: '',\r\n            voiceID: '',\r\n            btn: '',\r\n            btn1: '',\r\n            seconds: 10,\r\n            startQuiz: true,\r\n            minutes: 0,\r\n            picInterval: 0,\r\n\r\n        }\r\n        this.onClick = this.onClick.bind(this);\r\n        this.onClick1 = this.onClick1.bind(this);\r\n\r\n        this.takeSnapShot = this.takeSnapShot.bind(this);\r\n        //this.test = this.test.bind(this);\r\n    }\r\n    componentWillUnmount() {\r\n        //clearInterval(this.picInterval)\r\n    }\r\n    componentDidMount() {\r\n        this.getAssessments();\r\n        this.setTime();\r\n        Webcam.set({\r\n            width: 220,\r\n            height: 190,\r\n            image_format: 'png',\r\n            jpeg_quality: 100\r\n        });\r\n        Webcam.attach('#camera');\r\n        this.takeSnapShot();\r\n        //this.takeSnapShot(),10000;\r\n\r\n\r\n    }\r\n    setTime() {\r\n        this.myInterval = setInterval(() => {\r\n            const { seconds, minutes } = this.state\r\n            if (seconds > 0) {\r\n                this.setState(({ seconds }) => ({\r\n                    seconds: seconds - 1\r\n                }))\r\n            }\r\n            if (seconds === 0) {\r\n                if (minutes === 0) {\r\n                    this.setState({\r\n                        startQuiz: false\r\n                    })\r\n                    clearInterval(this.myInterval)\r\n                } else {\r\n                    this.setState(({ minutes }) => ({\r\n                        minutes: minutes - 1,\r\n                        seconds: 59\r\n                    }))\r\n                }\r\n            }\r\n        }, 1000)\r\n    }\r\n    getAssessments() {\r\n        let quizId = this.props.match.params.id;\r\n        axios.get(`/api/final/${quizId}`).then(response => {\r\n\r\n            this.setState({ mcqID: response.data.mcqID, voiceID: response.data.voiceID }, () => {\r\n\r\n            });\r\n        })\r\n    }\r\n    onClick() {\r\n        this.btn.setAttribute(\"disabled\", \"disabled\");\r\n    }\r\n    onClick1() {\r\n        this.btn1.setAttribute(\"disabled\", \"disabled\");\r\n    }\r\n    async takeSnapShot() {\r\n        console.log('inside takeSNap()')\r\n        this.picInterval = setInterval(() => {\r\n            document.querySelector('#btPic').click();\r\n            var data;\r\n\r\n            Webcam.snap(function (data_uri) {\r\n                data = data_uri;\r\n                const temp = data.substring(22);\r\n                const attach = { \"anu.png\": { 'data': temp } };\r\n                axios.request({\r\n                    method: 'post',\r\n                    url: '/api/images/',\r\n                    data: {\r\n                        file_name: \"anu\",\r\n\r\n                        _attachments: attach\r\n\r\n                    }\r\n                }).then(response => {\r\n                    const id = response.data.id;\r\n                    axios.get('/name?id=' + id).then(response => {\r\n                        var data = response.data;\r\n                        var c = data.indexOf(\"confidence:\");\r\n                        var l = data.indexOf(\"&label:\")\r\n                        var confidence = data.substring(11, (l - 1))\r\n                        var label = data.substring((l + 7));\r\n                        if (confidence < 50) {\r\n                            alert('Authentication Failed. You will be logged out')\r\n                            window.location.replace(\"/\")\r\n                        }\r\n                        console.log(confidence)\r\n                        console.log(label)\r\n                    }).catch(function (error) {\r\n                        console.log('error')\r\n                        console.log(error)\r\n                    });\r\n\r\n                }).catch(err => console.log(err));\r\n\r\n            });\r\n            // this.downloadImage(data)\r\n        }, 20000);\r\n\r\n        // this.downloadImage(data)\r\n\r\n    }\r\n    render() {\r\n        const { voiceID, seconds } = this.state\r\n        return (\r\n            <div>\r\n                <div id=\"camera\" style={{ display: \"none\" }}  ></div>\r\n                <input type=\"button\" id=\"btPic\" value=\"click\" style={{ display: \"none\" }} onClick={this.takeSnapShot} />\r\n\r\n                <h1>Assessment Instructions</h1>\r\n                <ul>\r\n                    <li>This assessment consists of two sections - MCQ and Oral</li>\r\n                    <li>Click on Start Assessment when you are ready to begin</li>\r\n                    <li>You need to provide camera and microphone permissions to the application to complete the assessment\r\n                </li>\r\n                    <li>The application will capture your random photos for verification. These images will be deleted after the attempt is complete</li>\r\n                    <li>If your assessment has a oral section, click on the Start Recording Button to record your answer. Once you finish your answer, clock Stop recording</li>\r\n                    <li>Once you press Stop recording, the application will play the recorded answer. if you wish to re-record your answer, follow the above steps again.</li>\r\n                </ul>\r\n                <br></br>\r\n                {this.state.mcqID !== undefined ? <Link ref={btn => { this.btn = btn; }} className=\"btn\" onClick={this.onClick} to={{\r\n                    pathname: `/quiz/getQuizDetail/${this.state.mcqID}`,\r\n                    state: {\r\n                        voiceID: voiceID\r\n                    }\r\n                }} style={{ float: \"right\" }} disabled={this.state.startQuiz} >\r\n                    {seconds != 0 ? seconds + \" seconds to Start\" : \"Start Assessment\"}</Link> :\r\n                    <Link ref={btn => { this.btn = btn; }} className=\"btn\" to={{\r\n                        pathname: `/voice/showAssessment/${this.state.voiceID}`\r\n                    }} style={{ float: \"right\" }}  disabled={this.state.startQuiz} >\r\n                         {seconds != 0 ? seconds + \" seconds to Start\" : \"Start Assessment\"} </Link>\r\n                }\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default FinalQuizDetails;\r\n","import React, { Fragment } from 'react';\nimport './Answer.css';\n\nconst Answer = (props) => {\n\n\n\n    let answers = Object.keys(props.answer.answers)\n        .map((qAnswer, i) => (\n            <Fragment>\n\n                <li\n                    /* className=\n                     {\n                         props.answer.correct_answer === Number(qAnswer) + 1 ?\n                             'correct' :\n                             props.clickedAnswer === Number(qAnswer) + 1 ?\n                                 'incorrect' : ''\n                     }*/\n                    onClick={() => {\n                        props.checkAnswer(qAnswer)\n\n\n                    }\n                    }\n                    key={qAnswer} >\n\n                    {props.answer.answers[qAnswer]}\n                </li >\n            </Fragment>\n        ));\n\n    return (\n        <>\n            <ul disabled={props.clickedAnswer ? true : false} className=\"Answers\">\n                {answers}\n            </ul>\n\n\n        </>\n    );\n};\nexport default Answer;\n","import React from 'react';\nimport './Question.css';\n\nconst Question = (props) => {\n    return (\n        <h1 className=\"blue-text text-darken-2\">{props.question.question}</h1>\n    );\n}\n\nexport default Question;\n","import axios from 'axios';\r\nimport React, { Component, Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Webcam from 'webcamjs';\r\nimport Answer from './answer/Answer';\r\nimport Question from './question/Question';\r\nimport './QuizMain.css';\r\n\r\nconst sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\r\n\r\nexport default class QuizDetails extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n         }\r\n    state = {\r\n        quiestions: {},\r\n        totalTime: '',\r\n        answers: {\r\n            \"answers\": [\r\n            ]\r\n        },\r\n        correctAnswers: '',\r\n        correctAnswer: 0,\r\n        clickedAnswer: 0,\r\n        step: 0,\r\n        score: 0,\r\n        details: [],\r\n        questions: [{}],\r\n        question: '',\r\n        minutes: '',\r\n        seconds: 1,\r\n        showLoader: true,\r\n        length: '',\r\n        voiceID: '',\r\n        picInterval: 0,\r\n        database: ''\r\n    }\r\n    componentDidMount() {\r\n        this.getQuiz();\r\n        this.setTime();\r\n        if (this.props.location.state !== undefined)\r\n            this.setState({\r\n                voiceID: this.props.location.state.voiceID\r\n            })\r\n        Webcam.set({\r\n            width: 220,\r\n            height: 190,\r\n            image_format: 'png',\r\n            jpeg_quality: 100\r\n        });\r\n        Webcam.attach('#camera');\r\n    }\r\n    \r\n    componentWillUnmount() {\r\n        clearInterval(this.myInterval)\r\n        clearInterval(this.picInterval)\r\n    }\r\n    setTime() {\r\n        this.myInterval = setInterval(() => {\r\n            const { seconds, minutes } = this.state\r\n            if (seconds > 0) {\r\n                this.setState(({ seconds }) => ({\r\n                    seconds: seconds - 1\r\n                }))\r\n            }\r\n            if (seconds === 0) {\r\n                if (minutes === 0) {\r\n                    clearInterval(this.myInterval)\r\n                } else {\r\n                    this.setState(({ minutes }) => ({\r\n                        minutes: minutes - 1,\r\n                        seconds: 59\r\n                    }))\r\n                }\r\n            }\r\n        }, 1000)\r\n    }\r\n    async getQuiz() {\r\n        await sleep(700);\r\n        let quizId = this.props.match.params.id;\r\n        axios.get(`/api/quizzes/${quizId}`).then(response => {\r\n            this.setState({\r\n                details: response.data,\r\n                quiestions: this.state.details.questions,\r\n                questions: response.data.questions,\r\n                question: this.state.questions.question,\r\n                totalTime: (response.data.questions.length) * 30,\r\n                minutes: Math.floor(((response.data.questions.length) * 30) / 60),\r\n                seconds: ((response.data.questions.length) * 30) % 60,\r\n                length: response.data.questions.length\r\n            }, () => {\r\n                this.setQuestion();\r\n            });\r\n        })\r\n\r\n\r\n    }\r\n\r\n    setQuestion() {\r\n        this.setState({\r\n            question: this.state.questions[this.state.step].question,\r\n            correctAnswers: this.state.questions[this.state.step].correct_answer - 1\r\n        });\r\n        this.setState({\r\n            showLoader: false\r\n        })\r\n    }\r\n\r\n    checkAnswer = answer => {\r\n        const { correctAnswers, step, score } = this.state;\r\n        this.state.correctAnswers = this.state.questions[step].correct_answer - 1;\r\n        if (answer == this.state.correctAnswers) {\r\n            this.setState({\r\n                score: score + 1,\r\n                correctAnswer: correctAnswers,\r\n                clickedAnswer: answer\r\n            });\r\n        } else {\r\n            this.setState({\r\n                correctAnswer: 0,\r\n                clickedAnswer: answer\r\n            });\r\n        }\r\n    }\r\n\r\n    // method to move to the next question\r\n    nextStep = (step) => {\r\n        this.setState({\r\n            step: step + 1,\r\n            correctAnswer: 0,\r\n            clickedAnswer: 0,\r\n\r\n        });\r\n\r\n    }\r\n\r\n      \r\n    render() {\r\n        let { correctAnswer, questions, clickedAnswer, step, score, minutes, seconds, showLoader } = this.state;\r\n        return (\r\n            <Fragment>\r\n                <div id=\"camera\" style={{ display: \"none\" }}  ></div>\r\n                <input type=\"button\" id=\"btPic\" value=\"click\" style={{ display: \"none\" }} onClick={this.takeSnapShot} />\r\n                {this.state.showLoader && <div id=\"loader\" className=\"container1\"></div>}\r\n                {!this.state.showLoader && < div className=\"Content\" >\r\n                    <br></br>\r\n                    <h1 className=\"blue-text text-darken-2\">{this.state.details.name}</h1>\r\n                    <hr></hr>\r\n                    {\r\n                        step < Object.keys(questions).length && !(minutes == 0 && seconds == 0) && !showLoader ?\r\n                            (<>\r\n                                <div id=\"hud\">\r\n                                    <div id=\"hud-item\">\r\n                                        <p id=\"progressText\" className=\"hud-prefix\">\r\n                                            Question {step + 1}/{this.state.length}\r\n                                        </p>\r\n\r\n                                        <div id=\"progressBar\">\r\n                                            <div id=\"progressBarFull\" style={{ width: (step + 1) / this.state.length * 100 + \"%\" }}></div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div id=\"hud-item\">\r\n                                        <p className=\"hud-prefix\">\r\n                                            Score\r\n            </p>\r\n                                        <h1 className=\"hud-main-text green-text\" id=\"score\" >\r\n                                            {this.state.score}\r\n                                        </h1>\r\n                                    </div>\r\n                                </div>\r\n                                <Question\r\n                                    question={questions[step]}\r\n                                    step={step}\r\n                                />\r\n                                {minutes === 0 && seconds < 10\r\n                                    ? <h4 align=\"right\" className=\"red-text text-darken-2\"><i className=\"fa fa-hourglass-half\">Time Remaining: {minutes}:{seconds < 10 ? `0${seconds}` : seconds}</i></h4>\r\n                                    : <h4 align=\"right\" className=\"blue-text text-darken-2\"><i className=\"fa fa-hourglass-half\">Time Remaining: {minutes}:{seconds < 10 ? `0${seconds}` : seconds}</i></h4>\r\n                                }\r\n                                <Answer\r\n                                    answer={questions[step]}\r\n                                    step={step}\r\n                                    checkAnswer={this.checkAnswer}\r\n                                    correctAnswer={correctAnswer}\r\n                                    clickedAnswer={clickedAnswer}\r\n                                    test={minutes === 0 && seconds === 0 ? 'disabled' : ''}\r\n                                />\r\n                                <button\r\n                                    className=\"NextStep\"\r\n                                    disabled={\r\n                                        (clickedAnswer && Object.keys(questions).length >= step)\r\n                                            || (minutes === 0 && seconds === 0)\r\n                                            ? false : true\r\n                                    }\r\n                                    onClick={() => this.nextStep(step)}>Next</button>\r\n                            </>) : (\r\n\r\n\r\n                                <div className=\"finalPage\">\r\n\r\n                                    {minutes === 0 && seconds === 0 ? <h1>Time Up!</h1>\r\n                                        : <h1>You have completed the quiz!</h1>}\r\n                                    <h1>Your score is: {score} of {Object.keys(questions).length}</h1>\r\n                                    <h1>Thank you!</h1>\r\n\r\n\r\n                                    <br></br>\r\n\r\n\r\n                                    <br></br>\r\n                                    {this.state.voiceID !== '' && this.state.voiceID !== undefined ?\r\n                                        <Link ref={btn1 => { this.btn1 = btn1; }} className=\"btn\" to={`/voice/showAssessment/${this.state.voiceID}`}  >\r\n                                            PROCEED TO NEXT SECTION - VOICE   </Link> :\r\n                                        <Link className=\"btn\" to={`/home`} >\r\n                                            HOME   </Link>}\r\n\r\n                                </div>\r\n\r\n                            )\r\n                    }\r\n                </div >}\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nclass Teacher extends Component {\r\n\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div>\r\n        <h1>Welcome </h1>\r\n        <h2>Please choose any of the below to continue</h2>\r\n        <div class=\"row\">\r\n          <div class=\"col s12 m6\">\r\n            <div class=\"card blue-grey darken-1\">\r\n              <div class=\"card-content white-text\">\r\n                <span class=\"card-title\">Assessment Form</span>\r\n                <p>This section allows you to create assessment using form. You will be asked\r\n                to enter the questions and details for each question. You can add objective and oral questions here.\r\n            </p>\r\n              </div>\r\n              <div class=\"card-action\">\r\n\r\n                <Link className=\"btn grey\" to=\"/quiz/addAssessment\">Start</Link>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col s12 m6\">\r\n            <div class=\"card blue-grey darken-1\">\r\n              <div class=\"card-content white-text\">\r\n                <span class=\"card-title\">Assessment Template</span>\r\n                <p>This section allows you to add an assesment based on an excel template. You can add objective and oral questions in this section\r\n                based on the sample template available.\r\n                </p>\r\n              </div>\r\n              <div class=\"card-action\">\r\n\r\n                <Link className=\"btn grey\" to=\"/quiz/addAssessmentTemplate\">Start</Link>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Teacher;\r\n","const validate = values => {\r\n\r\n  const errors = {}\r\n  if (!values.name) {\r\n    errors.name = 'Required'\r\n  }\r\n  if (!values.questions || !values.questions.length) {\r\n    errors.questions = { _error: 'At least one question must be entered' }\r\n  } else {\r\n    const questionsArrayErrors = []\r\n    values.questions.forEach((question, questionIndex) => {\r\n      const questionErrors = {}\r\n\r\n      if (!question || !question.question || question.question === undefined) {\r\n\r\n        questionErrors.question = 'Required'\r\n        questionsArrayErrors[questionIndex] = questionErrors\r\n      }\r\n      if (!question || !question.keywords) {\r\n        questionErrors.keywords = 'Required'\r\n        questionsArrayErrors[questionIndex] = questionErrors\r\n      }\r\n\r\n    })\r\n    if (questionsArrayErrors.length) {\r\n      errors.questions = questionsArrayErrors\r\n    }\r\n  }\r\n\r\n  return errors\r\n}\r\n\r\nexport default validate\r\n","import React from 'react';\nimport { Field, FieldArray, reduxForm } from 'redux-form';\nimport validate from './validate';\n\nconst renderField = ({ input, label, type, meta: { touched, error } }) => (\n  <div>\n    <label>{label}</label>\n    <div>\n      <input {...input} type={type} placeholder={label} />\n      {touched && error && <span>{error}</span>}\n    </div>\n  </div>\n);\n\nconst renderQuestions = ({ fields, meta: { touched, error, submitFailed } }) => (\n\n  <ul>\n    <li>\n      <button type=\"button\" onClick={() => fields.push({})}>Add Question</button>\n      {(touched || submitFailed) && error && <span>{error}</span>}\n    </li>\n    {fields.map((question, index) => (\n      <li key={index}>\n        <button\n          type=\"button\"\n          title=\"Remove Question\"\n          onClick={() => fields.remove(index)}\n        />\n        <h4>Question #{index + 1}</h4>\n        <Field\n          name={`${question}.question`}\n          type=\"text\"\n          component={renderField}\n          label=\"Question\"\n          className=\"\"\n          style={{ height: \"20px\" }}\n        />\n        <Field\n          name={`${question}.keywords`}\n          type=\"text\"\n          component={renderField}\n          label=\"Keywords\"\n        />\n\n\n      </li>\n    ))}\n  </ul>\n);\n\nconst FieldArraysForm1 = props => {\n  const { handleSubmit, pristine, reset, submitting } = props;\n\n  return (\n    <form onSubmit={handleSubmit}>\n\n      <Field\n        name=\"name\"\n        type=\"text\"\n        component={renderField}\n        label=\"Quiz Name\"\n      />\n\n      <FieldArray name=\"questions\" component={renderQuestions} />\n      <div>\n        <button type=\"submit\" disabled={submitting}>Submit</button>\n        <button type=\"button\" disabled={pristine || submitting} onClick={reset}>\n          Clear Values\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default reduxForm({\n  form: 'fieldArrays', // a unique identifier for this form\n  validate,\n})(FieldArraysForm1);\n","import axios from 'axios';\n//const sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\nexport default (async function showResults(values) {\n\n    var mcqID = values['id'];\n    delete values['id'];\n    axios.request({\n        method: 'post',\n        url: '/api/voice/',\n        data: values\n    }).then(response => {\n        var voiceID = response.data.id\n        localStorage.setItem('voiceId', voiceID);\n        alert('Voice Quiz added successfully!!')\n        window.opener = null;\n        window.open(\"\", \"_self\");\n        window.close();\n    }).catch(err => console.log(err));\n});\n\n","import { createStore, combineReducers } from 'redux';\nimport { reducer as reduxFormReducer } from 'redux-form';\n\nconst reducer = combineReducers({\n  form: reduxFormReducer, // mounted under \"form\"\n});\nconst store = (window.devToolsExtension\n  ? window.devToolsExtension()(createStore)\n  : createStore)(reducer);\n\nexport default store;\n","import React, { Component } from \"react\";\nimport { Provider } from \"react-redux\";\nimport FieldArraysForm from \"./FieldArraysForm\";\nimport showResults from \"./showResults\";\nimport store from \"./store\";\n\n\n\nclass VoiceIndexer extends Component {\n  render() {\n    var url = document.URL;\n    var id = url.substring(url.lastIndexOf('=') + 1);\n    return (\n      <Provider store={store}>\n        <div style={{ padding: 15 }}>\n          <h2>Add Voice Assessment</h2>\n          <FieldArraysForm initialValues={{ id }} onSubmit={showResults} />\n        \n        </div>\n      </Provider>\n    )\n  }\n};\nexport default VoiceIndexer;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Icon } from 'watson-react-components';\n\nvar test;\n// reducer to convert a list of messages into a (flat) list of results\nfunction allResultsReducer(list, message) {\n  return list.concat(message.results);\n}\n\n// reducer to extract all matched keywords from a list of results\nfunction keywordReducer(keywords, result) {\n  Object.keys(result.keywords_result || {}).forEach((k) => {\n    keywords[k] = keywords[k] || []; // eslint-disable-line\n    keywords[k].push(...result.keywords_result[k]);\n  });\n  return keywords;\n}\n\nfunction getSpotted(messages) {\n  return messages.reduce(allResultsReducer, []).reduce(keywordReducer, {});\n}\n\nexport function Keywords(props) {\n  const { isInProgress, messages, keywords } = props;\n  const notSpotted = isInProgress\n    ? 'Not yet spotted.'\n    : 'Not spotted.';\n  const notSpottedIcon = isInProgress\n    ? 'loader'\n    : 'close';\n    test=isInProgress;\n  const spotted = getSpotted(messages);\n  const list = keywords.map((k) => {\n    const spottings = spotted[k];\n    return (\n      <li key={k} className=\"base--li\">\n        <Icon\n          type={spottings\n            ? 'success-o'\n            : notSpottedIcon}\n          size=\"small\"\n        /> {' '}\n        <b>{k}</b>: {spottings\n          ? 'Spotted - '\n          : notSpotted}\n        <span className=\"base--p_light\">\n          {(spottings || []).map(s => `${s.start_time}-${s.end_time}s (${Math.round(s.confidence * 100)}%)`).join(', ')}\n        </span>\n      </li>\n    );\n  });\n  return (\n    <div>\n      <ul className=\"base--ul base--ul_no-bullets\">\n        {list}\n      </ul>\n    </div>\n    \n  );\n}\n\nKeywords.propTypes = {\n  messages: PropTypes.array.isRequired, // eslint-disable-line\n  keywords: PropTypes.array.isRequired, // eslint-disable-line\n  isInProgress: PropTypes.bool.isRequired,\n};\n\nexport function getKeywordsSummary(keywords, messages) {\n  const spotted = Object.keys(getSpotted(messages)).length;\n  const total = keywords.length;\n  const sum = spotted / total;\n  var score=0;\n if (Number(sum)>0.7)\n    score=1\n    else if(Number(sum)>0.35)\n    score=0.5 \n  sessionStorage.setItem('sum', Number(score));\n  return `${spotted}/${total}`;\n}\n\nexport function updateSession(keywords, messages) {\n  const spotted = Object.keys(getSpotted(messages)).length;\n  const total = keywords.length;\n  \n  //localStorage.re\n  return `${spotted}/${total}`;\n}\n\n","/* eslint no-param-reassign: 0 */\nimport axios from 'axios';\nimport MicRecorder from 'mic-recorder-to-mp3';\nimport React, { Component } from 'react';\nimport Dropzone from 'react-dropzone';\nimport { Alert } from 'watson-react-components';\nimport recognizeFile from 'watson-speech/speech-to-text/recognize-file';\nimport recognizeMicrophone from 'watson-speech/speech-to-text/recognize-microphone';\nimport cachedModels from '../../data/models.json';\nimport samples from '../../data/samples.json';\nimport './App.css';\nimport { getKeywordsSummary, Keywords, updateSession } from './keywords.jsx';\n\nconst Mp3Recorder = new MicRecorder({ bitRate: 128 });\nconst ERR_MIC_NARROWBAND = 'Microphone transcription cannot accommodate narrowband voice models, please select a broadband one.';\n\nexport class Demo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      model: 'en-US_BroadbandModel',\n      rawMessages: [],\n      formattedMessages: [],\n      audioSource: null,\n      speakerLabels: false,\n      keywords: this.getKeywords('en-US_BroadbandModel'),\n      // transcript model and keywords are the state that they were when the button was clicked.\n      // Changing them during a transcription would cause a mismatch between the setting sent to the\n      // service and what is displayed on the demo, and could cause bugs.\n      settingsAtStreamStart: {\n        model: '',\n        keywords: [],\n        speakerLabels: false,\n      },\n      error: null,\n      details: '',\n      questions: [],\n      question: '',\n      questionkey: '',\n      isRecording: false,\n      blobURL: '',\n      isBlocked: false,\n      transcriptStatus: \"Not Started\"\n    };\n    this.setKeywords = this.setKeywords.bind(this);\n    this.handleSampleClick = this.handleSampleClick.bind(this);\n    this.handleSample1Click = this.handleSample1Click.bind(this);\n    this.handleSample2Click = this.handleSample2Click.bind(this);\n    this.reset = this.reset.bind(this);\n    this.captureSettings = this.captureSettings.bind(this);\n    this.stopTranscription = this.stopTranscription.bind(this);\n    this.getRecognizeOptions = this.getRecognizeOptions.bind(this);\n    this.isNarrowBand = this.isNarrowBand.bind(this);\n    this.handleMicClick = this.handleMicClick.bind(this);\n    this.handleUploadClick = this.handleUploadClick.bind(this);\n    this.handleUserFile = this.handleUserFile.bind(this);\n    this.handleUserFileRejection = this.handleUserFileRejection.bind(this);\n    this.playFile = this.playFile.bind(this);\n    this.handleStream = this.handleStream.bind(this);\n    this.handleRawMessage = this.handleRawMessage.bind(this);\n    this.handleFormattedMessage = this.handleFormattedMessage.bind(this);\n    this.handleTranscriptEnd = this.handleTranscriptEnd.bind(this);\n    this.getKeywords = this.getKeywords.bind(this);\n    this.handleModelChange = this.handleModelChange.bind(this);\n    this.supportsSpeakerLabels = this.supportsSpeakerLabels.bind(this);\n    this.handleSpeakerLabelsChange = this.handleSpeakerLabelsChange.bind(this);\n    this.handleKeywordsChange = this.handleKeywordsChange.bind(this);\n    this.getKeywordsArr = this.getKeywordsArr.bind(this);\n    this.getKeywordsArrUnique = this.getKeywordsArrUnique.bind(this);\n    this.getFinalResults = this.getFinalResults.bind(this);\n    this.getCurrentInterimResult = this.getCurrentInterimResult.bind(this);\n    this.getFinalAndLatestInterimResult = this.getFinalAndLatestInterimResult.bind(this);\n    this.handleError = this.handleError.bind(this);\n    this.blobToFile = this.blobToFile.bind(this);\n  }\n\n  start = () => {\n    this.setState({\n      transcriptStatus: \"In Progress\"\n    })\n    if (this.state.isBlocked) {\n      alert('You need to enable Microphone to complete the assessment')\n      console.log('Permission Denied');\n    } else {\n      Mp3Recorder\n        .start()\n        .then(() => {\n          this.setState({ isRecording: true });\n        }).catch((e) => console.error(e));\n    }\n    this.props.onTranscribe(true);\n  };\n\n  stop = () => {\n    Mp3Recorder\n      .stop()\n      .getMp3()\n      .then(([buffer, blob]) => {\n        const blobURL = URL.createObjectURL(blob)\n        this.setState({ blobURL, isRecording: false });\n        const file = new File(buffer, 'answer.mp3', {\n          type: blob.type,\n          lastModified: Date.now()\n        });\n      \n        this.handleUserAnswer(file)\n      }).catch((e) => console.log(e));\n\n  };\n  blobToFile(theBlob, fileName) {\n    //A Blob() is almost a File() - it's just missing the two properties below which we will add\n    //theBlob.lastModifiedDate = new Date();\n    theBlob.name = fileName;\n    return theBlob;\n  }\n  reset() {\n    if (this.state.audioSource) {\n      this.stopTranscription();\n    }\n    this.setState({ rawMessages: [], formattedMessages: [], error: null });\n  }\n\n  /**\n     * The behavior of several of the views depends on the settings when the\n     * transcription was started. So, this stores those values in a settingsAtStreamStart object.\n     */\n  captureSettings() {\n    const { model, speakerLabels } = this.state;\n    this.setState({\n      settingsAtStreamStart: {\n        model,\n        keywords: this.getKeywordsArrUnique(),\n        speakerLabels,\n      },\n    });\n  }\n\n  stopTranscription() {\n    if (this.stream) {\n      this.stream.stop();\n      // this.stream.removeAllListeners();\n      // this.stream.recognizeStream.removeAllListeners();\n    }\n    this.setState({ audioSource: null });\n  }\n\n  getRecognizeOptions(extra) {\n    const keywords = this.getKeywordsArrUnique();\n    return Object.assign({\n      // formats phone numbers, currency, etc. (server-side)\n      access_token: this.state.accessToken,\n      token: this.state.token,\n      smart_formatting: true,\n      format: true, // adds capitals, periods, and a few other things (client-side)\n      model: this.state.model,\n      objectMode: true,\n      interim_results: true,\n      // note: in normal usage, you'd probably set this a bit higher\n      word_alternatives_threshold: 0.01,\n      keywords,\n      keywords_threshold: keywords.length\n        ? 0.01\n        : undefined, // note: in normal usage, you'd probably set this a bit higher\n      timestamps: true, // set timestamps for each word - automatically turned on by speaker_labels\n      // includes the speaker_labels in separate objects unless resultsBySpeaker is enabled\n      speaker_labels: this.state.speakerLabels,\n      // combines speaker_labels and results together into single objects,\n      // making for easier transcript outputting\n      resultsBySpeaker: this.state.speakerLabels,\n      // allow interim results through before the speaker has been determined\n      speakerlessInterim: this.state.speakerLabels,\n      url: this.state.serviceUrl,\n    }, extra);\n  }\n\n  isNarrowBand(model) {\n    model = model || this.state.model;\n    return model.indexOf('Narrowband') !== -1;\n  }\n\n  handleMicClick() {\n    if (this.state.audioSource === 'mic') {\n      this.stopTranscription();\n\n      return;\n    }\n    this.reset();\n    this.setState({ audioSource: 'mic' });\n\n\n    // The recognizeMicrophone() method is a helper method provided by the watson-speech package\n    // It sets up the microphone, converts and downsamples the audio, and then transcribes it\n    // over a WebSocket connection\n    // It also provides a number of optional features, some of which are enabled by default:\n    //  * enables object mode by default (options.objectMode)\n    //  * formats results (Capitals, periods, etc.) (options.format)\n    //  * outputs the text to a DOM element - not used in this demo because it doesn't play nice\n    // with react (options.outputElement)\n    //  * a few other things for backwards compatibility and sane defaults\n    // In addition to this, it passes other service-level options along to the RecognizeStream that\n    // manages the actual WebSocket connection.\n    this.handleStream(recognizeMicrophone(this.getRecognizeOptions()));\n  }\n\n  handleUploadClick() {\n    if (this.state.audioSource === 'upload') {\n      this.stopTranscription();\n    } else {\n      this.dropzone.open();\n    }\n  }\n\n  handleUserAnswer(files) {\n    const file = files;\n    if (!file) {\n     \n      return;\n    }\n    this.reset();\n    this.setState({ audioSource: 'upload' });\n    this.playFile(file);\n  }\n\n\n  handleUserFile(files) {\n    const file = files[0];\n    if (!file) {\n      \n      return;\n    }\n    this.reset();\n    this.setState({ audioSource: 'upload' });\n    this.playFile(file);\n    \n  }\n\n  handleUserFileRejection() {\n    this.setState({ error: 'Sorry, that file does not appear to be compatible.' });\n  }\n  testFun() {\n    if (this.state.audioSource === 'mic') {\n      updateSession(this.settingsAtStreamStart, this.messages);\n    }\n  }\n  handleSample1Click() {\n    this.handleSampleClick(1);\n  }\n\n  handleSample2Click() {\n    this.handleSampleClick(2);\n  }\n\n\n  handleSampleClick(which) {\n    if (this.state.audioSource === `sample-${which}`) {\n      this.stopTranscription();\n    } else {\n      const filename = samples[this.state.model] && samples[this.state.model][which - 1].filename;\n      if (!filename) {\n        this.handleError(`No sample ${which} available for model ${this.state.model}`, samples[this.state.model]);\n      }\n      this.reset();\n      this.setState({ audioSource: `sample-${which}` });\n      this.playFile(`audio/${filename}`);\n    }\n  }\n\n  /**\n   * @param {File|Blob|String} file - url to an audio file or a File\n   * instance fro user-provided files.\n   */\n  playFile(file) {\n    // The recognizeFile() method is a helper method provided by the watson-speach package\n    // It accepts a file input and transcribes the contents over a WebSocket connection\n    // It also provides a number of optional features, some of which are enabled by default:\n    //  * enables object mode by default (options.objectMode)\n    //  * plays the file in the browser if possible (options.play)\n    //  * formats results (Capitals, periods, etc.) (options.format)\n    //  * slows results down to realtime speed if received faster than realtime -\n    // this causes extra interim `data` events to be emitted (options.realtime)\n    //  * combines speaker_labels with results (options.resultsBySpeaker)\n    //  * outputs the text to a DOM element - not used in this demo because it doesn't play\n    //  nice with react (options.outputElement)\n    //  * a few other things for backwards compatibility and sane defaults\n    // In addition to this, it passes other service-level options along to the RecognizeStream\n    // that manages the actual WebSocket connection.\n    this.handleStream(recognizeFile(this.getRecognizeOptions({\n      file,\n      play: true, // play the audio out loud\n      // use a helper stream to slow down the transcript output to match the audio speed\n      realtime: true,\n    })));\n  }\n\n  handleStream(stream) {\n \n    if (this.stream) {\n      this.stream.stop();\n      this.stream.removeAllListeners();\n      this.stream.recognizeStream.removeAllListeners();\n    }\n    this.stream = stream;\n    this.captureSettings();\n stream.on('data', this.handleFormattedMessage).on('end', this.handleTranscriptEnd).on('error', this.handleError);\n\n    stream.recognizeStream.on('end', () => {\n      if (this.state.error) {\n        this.handleTranscriptEnd();\n      }\n    });\n\n    // grab raw messages from the debugging events for display on the JSON tab\n    stream.recognizeStream\n      .on('message', (frame, json) => this.handleRawMessage({ sent: false, frame, json }))\n      .on('send-json', json => this.handleRawMessage({ sent: true, json }))\n      .once('send-data', () => this.handleRawMessage({\n        sent: true, binary: true, data: true, // discard the binary data to avoid waisting memory\n      }))\n      .on('close', (code, message) => this.handleRawMessage({ close: true, code, message }));\n  }\n\n  handleRawMessage(msg) {\n    const { rawMessages } = this.state;\n    this.setState({ rawMessages: rawMessages.concat(msg) });\n  }\n\n  handleFormattedMessage(msg) {\n    const { formattedMessages } = this.state;\n    this.setState({ formattedMessages: formattedMessages.concat(msg) });\n  }\n\n  handleTranscriptEnd() {\n    this.setState({ audioSource: null, transcriptStatus: \"Completed\" });\n    this.props.onTranscribe(false);\n\n  }\n\n  componentDidMount() {\n    this.fetchToken();\n   \n    navigator.getUserMedia({ audio: true },\n      () => {      \n        this.setState({ isBlocked: false });\n      },\n      () => {\n        this.setState({ isBlocked: true })\n      },\n    );\n\n    var a = this.props.datal;\n      this.state.question = a.question;\n    this.state.questionkey = a.keywords\n    this.setState({ tokenInterval: setInterval(this.fetchToken, 50 * 60 * 1000) });\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.state.tokenInterval);\n  }\n  getVoiceQuizDetails() {\n    let quizId = this.props.match.params.id;\n    axios.get(`/voice/${quizId}`).then(response => {  \n      this.setState({ details: response.data, questions: response.data.questions }, () => {\n      });\n    })\n  \n  }\n\n  fetchToken() {\n    return fetch('/apii/v1/credentials').then((res) => {\n      if (res.status !== 200) {\n        throw new Error('Error retrieving auth token');\n      }\n      return res.json();\n    }) // todo: throw here if non-200 status\n      .then(creds => this.setState({ ...creds })).catch(this.handleError);\n  }\n\n  getKeywords(model) {\n    // a few models have more than two sample files, but the demo can only handle\n    // two samples at the moment\n    // so this just takes the keywords from the first two samples\n    const files = samples[model];\n    return (files && files.length >= 2 && `${files[0].keywords}, ${files[1].keywords}`) || '';\n  }\n\n  setKeywords(keywords) {\n    this.state.keywords = keywords\n  }\n\n  handleModelChange(model) {\n    this.reset();\n    this.setState({\n      model,\n      keywords: this.getKeywords(model),\n      speakerLabels: this.supportsSpeakerLabels(model),\n    });\n\n    // clear the microphone narrowband error if it's visible and a broadband model was just selected\n    if (this.state.error === ERR_MIC_NARROWBAND && !this.isNarrowBand(model)) {\n      this.setState({ error: null });\n    }\n\n    // clear the speaker_lables is not supported error - e.g.\n    // speaker_labels is not a supported feature for model en-US_BroadbandModel\n    if (this.state.error && this.state.error.indexOf('speaker_labels is not a supported feature for model') === 0) {\n      this.setState({ error: null });\n    }\n  }\n\n  supportsSpeakerLabels(model) {\n    model = model || this.state.model;\n    // todo: read the upd-to-date models list instead of the cached one\n    return cachedModels.some(m => m.name === model && m.supported_features.speaker_labels);\n  }\n\n  handleSpeakerLabelsChange() {\n    this.setState(prevState => ({ speakerLabels: !prevState.speakerLabels }));\n  }\n\n  handleKeywordsChange(e) {\n    this.setState({ keywords: e.target.value });\n   \n  }\n\n  keywordsLoad(e) {\n    this.setState({ keywords: e.value });\n  }\n\n  // cleans up the keywords string into an array of individual, trimmed, non-empty keywords/phrases\n  getKeywordsArr() {\n    return this.state.keywords.split(',').map(k => k.trim()).filter(k => k);\n  }\n\n  // cleans up the keywords string and produces a unique list of keywords\n  getKeywordsArrUnique() {\n    return this.state.keywords\n      .split(',')\n      .map(k => k.trim())\n      .filter((value, index, self) => self.indexOf(value) === index);\n  }\n\n  getFinalResults() {\n    return this.state.formattedMessages.filter(r => r.results\n      && r.results.length && r.results[0].final);\n  }\n\n  getCurrentInterimResult() {\n    const r = this.state.formattedMessages[this.state.formattedMessages.length - 1];\n\n    // When resultsBySpeaker is enabled, each msg.results array may contain multiple results.\n    // However, all results in a given message will be either final or interim, so just checking\n    // the first one still works here.\n    if (!r || !r.results || !r.results.length || r.results[0].final) {\n      return null;\n    }\n    return r;\n  }\n\n  getFinalAndLatestInterimResult() {\n    const final = this.getFinalResults();\n    const interim = this.getCurrentInterimResult();\n    if (interim) {\n      final.push(interim);\n    }\n    return final;\n  }\n\n  handleError(err, extra) {\n    console.error(err, extra);\n    if (err.name === 'UNRECOGNIZED_FORMAT') {\n      err = 'Unable to determine content type from file name or header; mp3, wav, flac, ogg, opus, and webm are supported. Please choose a different file.';\n    } else if (err.name === 'NotSupportedError' && this.state.audioSource === 'mic') {\n      err = 'This browser does not support microphone input.';\n    } else if (err.message === '(\\'UpsamplingNotAllowed\\', 8000, 16000)') {\n      err = 'Please select a narrowband voice model to transcribe 8KHz audio files.';\n    } else if (err.message === 'Invalid constraint') {\n      // iPod Touch does this on iOS 11 - there is a microphone, but Safari claims there isn't\n      err = 'Unable to access microphone';\n    }\n    this.setState({ error: err.message || err });\n  }\n\n\n\n\n  render() {\n    const {\n      token, accessToken, audioSource, error, settingsAtStreamStart,\n\n    } = this.state;\n\n    const buttonsEnabled = !!token || !!accessToken;\n    const buttonClass = buttonsEnabled\n      ? 'base--button'\n      : 'base--button base--button_black';\n\n    let micIconFill = '#000000';\n    let micButtonClass = buttonClass;\n    if (audioSource === 'mic') {\n      micButtonClass += ' mic-active';\n      micIconFill = '#FFFFFF';\n    } else if (!recognizeMicrophone.isSupported) {\n      micButtonClass += ' base--button_black';\n    }\n\n    const err = error\n      ? (\n        <Alert type=\"error\" color=\"red\">\n          <p className=\"base--p\">\n            {error}\n          </p>\n        </Alert>\n      )\n      : null;\n\n    const messages = this.getFinalAndLatestInterimResult();\n   \n    return (\n      \n      <Dropzone\n        onDropAccepted={this.handleUserFile}\n        onDropRejected={this.handleUserFileRejection}\n        maxSize={200 * 1024 * 1024}\n        accept=\"audio/wav, audio/mp3, audio/mpeg, audio/l16, audio/ogg, audio/flac, .mp3, .mpeg, .wav, .ogg, .opus, .flac\" // eslint-disable-line\n        disableClick\n        className=\"dropzone _container _container_large\"\n        activeClassName=\"dropzone-active\"\n        rejectClassName=\"dropzone-reject\"\n        ref={(node) => {\n          this.dropzone = node;\n        }}\n      >\n\n\n\n        <div className=\"flex setup\">\n          <div className=\"column\">\n\n\n\n          </div>\n        </div>\n\n        <div className=\"flex buttons\">\n        <div id=\"camera\" style={{ display: \"none\" }}  ></div>\n                <input type=\"button\" id=\"btPic\" value=\"click\" style={{ display: \"none\" }} onClick={this.takeSnapShot} />\n               \n          <ul className=\"collection\">\n            <li className=\"collection-item\" onLoad={this.setKeywords(this.props.datal.keywords)}> {this.props.datal.question}\n            </li><li className=\"collection-item\">\n              <br />\n              <a onClick={this.start} disabled={this.state.isRecording} className=\"btn\"><i className=\"fa fa-microphone\"> Start Recording</i></a>\n              &nbsp;&nbsp;&nbsp;&nbsp;\n              <a onClick={this.stop} disabled={!this.state.isRecording} className=\"btn\"><i className=\"fa fa-microphone-slash\"> Stop Recording</i></a>\n            </li>\n          \n            <li className=\"collection-item\">\n             \n              <p>Your answer matched {getKeywordsSummary(settingsAtStreamStart.keywords, messages)} keywords</p>\n\n            </li>\n\n\n           \n            <li className=\"collection-item\" >Transcription Status: {this.state.transcriptStatus}</li>\n           \n\n          </ul>\n          <br/>\n\n\n\n\n        </div>\n<br/>\n        {err}\n\n\n      </Dropzone>\n\n    );\n  }\n};\n\nexport default Demo;\n","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass VoiceAssessmentItem extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            item:props.item\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(<li className=\"collection-item\">\r\n        <Link to={`/voice/showAssessment/${this.state.item.id}`}>\r\n        {this.state.item.name}</Link>\r\n        </li>);\r\n    }\r\n\r\n}\r\n\r\n export default VoiceAssessmentItem;","import axios from 'axios';\r\nimport React, { Component } from 'react';\r\nimport VoiceAssessmentItem from './VoiceAssessmentItem';\r\nclass VoiceAssessment extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            meetups: []\r\n        }\r\n    }\r\n    componentWillMount() {\r\n\r\n        this.getVoiceQuiz();\r\n    }\r\n    getVoiceQuiz() {\r\n\r\n        axios.get('/api/voice/').then(response => {\r\n            this.setState({ meetups: response.data }, () => {\r\n            });\r\n        })\r\n    }\r\n    render() {\r\n        const meetupItems = this.state.meetups.map((meetup, i) => {\r\n            return (<VoiceAssessmentItem key={meetup.id}\r\n                item={meetup} />)\r\n        })\r\n\r\n        return (\r\n            <div>\r\n                <h1>Voice Assessment</h1>\r\n                <ul className=\"collection\">\r\n                    {meetupItems}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default VoiceAssessment;\r\n","import axios from 'axios';\r\nimport React, { Component } from 'react';\r\nimport Demo from './views/demo.jsx';\r\nclass VoiceQuizDetails extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            keywords: '',\r\n            correctAnswers: '',\r\n            correctAnswer: 0,\r\n            clickedAnswer: 0,\r\n            step: 0,\r\n            score: 0,\r\n            details: [],\r\n            questions: [{ \"question\": \"\", \"answers\": [], \"correct_answer\": \"\", \"id\": 2 }],\r\n            question: '',\r\n            check: 1,\r\n            length: '',\r\n            showLoader: true,\r\n            minutes: '',\r\n            seconds: 1,\r\n            progress: false\r\n        }\r\n        this.handleTranscription = this.handleTranscription.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getQuiz();\r\n        this.setTime();\r\n        sessionStorage.removeItem('score');\r\n    }\r\n    setTime() {\r\n        this.myInterval = setInterval(() => {\r\n            const { seconds, minutes } = this.state\r\n            if (seconds > 0) {\r\n                this.setState(({ seconds }) => ({\r\n                    seconds: seconds - 1\r\n                }))\r\n            }\r\n            if (seconds === 0) {\r\n                if (minutes === 0) {\r\n                    clearInterval(this.myInterval)\r\n                } else {\r\n                    this.setState(({ minutes }) => ({\r\n                        minutes: minutes - 1,\r\n                        seconds: 59\r\n                    }))\r\n                }\r\n            }\r\n        }, 1000)\r\n    }\r\n\r\n    getQuiz() {\r\n        let quizId = this.props.match.params.id;\r\n        axios.get(`/api/voice/${quizId}`).then(response => {\r\n            this.setState({\r\n                details: response.data,\r\n                quiestions: this.state.details.questions,\r\n                questions: response.data.questions,\r\n                question: this.state.questions.question,\r\n                length: response.data.questions.length,\r\n                check: 0,\r\n                minutes: Math.floor(((response.data.questions.length) * 120) / 60),\r\n                seconds: ((response.data.questions.length) * 120) % 60,\r\n            }, () => {\r\n                this.setQuestion();\r\n            });\r\n        })\r\n\r\n\r\n    }\r\n    handleTranscription(langValue) {\r\n        this.setState({ progress: langValue });\r\n    }\r\n\r\n    setQuestion() {\r\n        this.setState({\r\n            question: this.state.questions[this.state.step].question,\r\n            correctAnswers: this.state.questions[this.state.step].correct_answer - 1\r\n        });\r\n        this.setState({\r\n            showLoader: false\r\n        })\r\n    }\r\n\r\n\r\n    getMeetup() {\r\n        let quizId = this.props.match.params.id;\r\n        axios.get(`/api/voice/${quizId}`).then(response => {\r\n            this.setState({ details: response.data, questions: response.data.questions }, () => {\r\n                \r\n            });\r\n        })\r\n    }\r\n    checkAnswer = answer => {\r\n        const { correctAnswers, step, score } = this.state;\r\n        this.state.correctAnswers = this.state.questions[step].correct_answer - 1;\r\n        if (answer === this.state.correctAnswers) {\r\n            this.setState({\r\n                score: score + 1,\r\n                correctAnswer: correctAnswers,\r\n                clickedAnswer: answer\r\n            });\r\n        } else {\r\n            this.setState({\r\n                correctAnswer: 0,\r\n                clickedAnswer: answer\r\n            });\r\n        }\r\n    }\r\n\r\n    nextStep = (step) => {\r\n        this.setState({\r\n            step: step + 1,\r\n            correctAnswer: 0,\r\n            clickedAnswer: 0,\r\n            progress: false\r\n\r\n        });\r\n        const sum = sessionStorage.getItem('sum');\r\n        const score = sessionStorage.getItem('score');\r\n        if (!isNaN(sum) && !isNaN(score))\r\n            sessionStorage.setItem('score', Number(sum) + Number(score))\r\n        sessionStorage.setItem('sum',0);\r\n\r\n        }\r\n\r\n    render() {\r\n        let { questions, step, score, minutes, seconds, showLoader } = this.state;\r\n        return (\r\n            <div className=\"Content\">\r\n                <div id=\"camera\" style={{ display: \"none\" }}  ></div>\r\n                <input type=\"button\" id=\"btPic\" value=\"click\" style={{ display: \"none\" }} onClick={this.takeSnapShot} />\r\n\r\n                <h1 className=\"blue-text text-darken-2\">Oral Assessment</h1>\r\n                <h1 className=\"blue-text text-darken-2\">{this.state.details.name}</h1>\r\n                {showLoader && <div id=\"loader\" className=\"container1\"></div>}\r\n                {!showLoader && < div className=\"Content\" >\r\n                    {step < Object.keys(questions).length ?\r\n                        (<>\r\n                            <div id=\"hud\">\r\n                                <div id=\"hud-item\">\r\n                                    <p id=\"progressText\" className=\"hud-prefix\">\r\n                                        Question {step + 1}/{this.state.length}\r\n                                    </p>\r\n\r\n                                    <div id=\"progressBar\">\r\n                                        <div id=\"progressBarFull\" style={{ width: (step + 1) / this.state.length * 100 + \"%\" }}></div>\r\n                                    </div>\r\n                                </div>\r\n                                <div id=\"hud-item\">\r\n                                    <p className=\"hud-prefix\">\r\n                                        Score\r\n            </p>\r\n                                    <h1 className=\"hud-main-text green-text\" id=\"score\" >\r\n                                        {sessionStorage.getItem('score') === null ? 0 : sessionStorage.getItem('score')}\r\n                                    </h1>\r\n                                </div>\r\n                            </div>\r\n                            <br></br>\r\n                            {minutes === 0 && seconds < 10\r\n                                ? <h4 align=\"right\" className=\"red-text text-darken-2\"><i className=\"fa fa-hourglass-half\">Time Remaining: {minutes}:{seconds < 10 ? `0${seconds}` : seconds}</i></h4>\r\n                                : <h4 align=\"right\" className=\"blue-text text-darken-2\"><i className=\"fa fa-hourglass-half\">Time Remaining: {minutes}:{seconds < 10 ? `0${seconds}` : seconds}</i></h4>\r\n                            }\r\n                            <Demo datal={this.state.questions[step]}\r\n                                clickedAnswer={this.state.clickedAnswer}\r\n                                onTranscribe={this.handleTranscription} />\r\n                            <button\r\n                                className=\"NextStep\"\r\n                                disabled={this.state.progress}\r\n                                onClick={() => this.nextStep(step)\r\n\r\n                                }>Next</button>\r\n                        </>) : (\r\n                            <div className=\"finalPage\">\r\n                                {minutes === 0 && seconds === 0 ? <h1>Time Up!</h1>\r\n                                    :\r\n                                    <h1>You have completed the quiz!</h1>}\r\n                                <h1>Your score is: {Math.round(sessionStorage.getItem('score') * 100) / 100} of {Object.keys(questions).length}</h1>\r\n                                <h1>Thank you!</h1>\r\n                               \r\n\r\n                                <br></br>\r\n                                <a className=\"btn\" href=\"/home\" >\r\n                                    HOME   </a>\r\n                            </div>\r\n                        )\r\n                    }\r\n                </div>}\r\n            </div>\r\n\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default VoiceQuizDetails;\r\n","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport '../App.css';\r\nimport Indexer from './array/indexer';\r\nimport Assessment from './Assessment';\r\nimport ExcelReader from './ExcelReader';\r\nimport FinalQuizAdd from './FinalQuizAdd';\r\nimport FinalQuizDetails from './FinalQuizDetails';\r\nimport QuizDetails from './QuizDetails';\r\nimport Teacher from './Teacher';\r\nimport VoiceIndexer from './voice/indexer';\r\nimport Demo from './voice/views/demo';\r\nimport VoiceAssessment from './voice/VoiceAssessment';\r\nimport VoiceQuizDetails from './voice/VoiceQuizDetails';\r\nconst Main = () => (\r\n    <main>\r\n        <Switch >\r\n            <Route exact path='/home' component={Assessment} />\r\n            <Route exact path='/mcq/addAssessment' component={Indexer} />\r\n            <Route exact path='/voice/showAssessments' component={VoiceAssessment} />\r\n            <Route exact path='/voice/takeAssessment/:id' component={Demo} />\r\n            <Route exact path='/assessment' component={Demo} />\r\n            <Route exact path='/voice/addAssessment' component={VoiceIndexer} />\r\n            <Route exact path='/quiz/addAssessmentTemplate' component={ExcelReader} />\r\n\r\n            <Route exact path='/voice/showAssessment/:id' component={VoiceQuizDetails} />\r\n            <Route exact path='/quiz/getQuizDetail/:id' component={QuizDetails} />\r\n            <Route exact path='/quiz/getQuiz/:id' component={FinalQuizDetails} />\r\n            <Route exact path='/quiz/takeAssessment' component={Assessment} />\r\n            <Route exact path='/quiz/addAssessment' component={FinalQuizAdd} />\r\n            <Route exact path='/teacher' component={Teacher} />\r\n\r\n        </Switch>\r\n\r\n    </main>\r\n)\r\n\r\nexport default Main\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nclass Navbar extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <nav className=\"blue darken-2\">\r\n                    <div className=\"nav-wrapper\">\r\n                    <a href=\"#\" color=\"white hide-on-med-and-down\" className=\"brand-logo\">\r\n                       \r\n                       </a>\r\n                       <a href=\"/home\" color=\"white\">Online Assessment</a>\r\n                        \r\n                        <a href=\"#\" data-target=\"main-menu\" className=\"sidenav-trigger\">\r\n                            <i className=\"fa fa-bars\"></i></a>\r\n                        <ul className=\"right hide-on-med-and-down\">\r\n                            <li><Link to='/'><i className=\"fa fa-hourglass\"> Logout</i></Link> </li>\r\n                             </ul>\r\n                    </div>\r\n\r\n                </nav>\r\n\r\n\r\n                <ul className=\"sidenav\" id=\"main-menu\">\r\n                    <li><Link to='/quiz/addAssessmentTemplate'> Add Quiz using Template</Link> </li>\r\n                    <li><Link to='/quiz/takeAssessment'> Take Quiz</Link> </li>\r\n                     <li><Link to='/quiz/addAssessment'> Add Quiz</Link> </li>\r\n                            \r\n                </ul>\r\n                \r\n\r\n                \r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navbar;\r\n","import React from 'react';\nimport './App.css';\nimport Main from './components/Main';\nimport Navbar from './components/Navbar';\nconst App = () => (\n  <div>\n    <Navbar />\n    <div className=\"container\">\n      <Main />\n    </div>\n\n  </div>\n)\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nrequire('dotenv').config({ silent: true });\n\n\nReactDOM.render(\n <BrowserRouter>\n    <App />\n    </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}